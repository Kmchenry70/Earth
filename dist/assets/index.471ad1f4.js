const f=function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const d of r.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&i(d)}).observe(document,{childList:!0,subtree:!0});function v(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerpolicy&&(r.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?r.credentials="include":e.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function i(e){if(e.ep)return;e.ep=!0;const r=v(e);fetch(e.href,r)}};f();var E="varying vec2 vertexUV;varying vec3 vertexNormal;void main(){vertexUV=uv;vertexNormal=normalize(normalMatrix*normal);gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.0);}",y="uniform sampler2D globeTexture;varying vec2 vertexUV;varying vec3 vertexNormal;void main(){float intensity=1.05-dot(vertexNormal,vec3(0.0,0.0,1.0));vec3 atmosphere=vec3(0.3,0.6,1.0)*pow(intensity,1.5);gl_FragColor=vec4(atmosphere+texture2D(globeTexture,vertexUV).xyz,1.0);}",T="varying vec3 vertexNormal;void main(){vertexNormal=normalize(normalMatrix*normal);gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.0);}",M="varying vec3 vertexNormal;void main(){float intensity=pow(0.7-dot(vertexNormal,vec3(0,0,1.0)),2.0);vec3 atmosphere=vec3(0.3,0.6,1.0)*pow(intensity,1.5);gl_FragColor=vec4(0.3,0.6,1.0,1.0)*intensity;}",H="varying vec2 vertexUV;varying vec3 vertexNormal;void main(){vertexUV=uv;vertexNormal=normalize(normalMatrix*normal);gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.0);}",R="uniform sampler2D globeTexture;varying vec2 vertexUV;varying vec3 vertexNormal;void main(){float intensity=1.0-dot(vertexNormal,vec3(0.0,0.0,1.0));vec3 atmosphere=vec3(0.0,0.0,0.0)*pow(intensity,0.7);gl_FragColor=vec4(atmosphere+texture2D(globeTexture,vertexUV).xyz,1.0);}",S="varying vec2 vertexUV;varying vec3 vertexNormal;void main(){vertexUV=uv;vertexNormal=normalize(normalMatrix*normal);gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.0);}",V="uniform sampler2D globeTexture;varying vec2 vertexUV;varying vec3 vertexNormal;void main(){float intensity=1.05-dot(vertexNormal,vec3(0.0,0.0,1.0));vec3 atmosphere=vec3(0.4,0.6,0)*pow(intensity,1.5);gl_FragColor=vec4(atmosphere+texture2D(globeTexture,vertexUV).xyz,1.0);}";const t=new THREE.Scene,n=new THREE.WebGLRenderer({antialias:!0});n.setSize(window.innerWidth,window.innerHeight);n.setPixelRatio(window.devicePixelRatio);document.body.appendChild(n.domElement);const x=new THREE.Mesh(new THREE.SphereGeometry(5,50,50),new THREE.ShaderMaterial({vertexShader:E,fragmentShader:y,uniforms:{globeTexture:{value:new THREE.TextureLoader().load("./img/earth.jpg")}}}));t.add(x);const u=new THREE.Mesh(new THREE.SphereGeometry(5,50,50),new THREE.ShaderMaterial({vertexShader:T,fragmentShader:M,blending:THREE.AdditiveBlending,side:THREE.BackSide}));u.scale.set(1.1,1.1,1.1);t.add(u);const a=new THREE.Mesh(new THREE.SphereGeometry(1.5,50,50),new THREE.ShaderMaterial({vertexShader:H,fragmentShader:R,uniforms:{globeTexture:{value:new THREE.TextureLoader().load("./img/moon.jpg")}}}));a.position.set(-50,0,0);t.add(a);var c=-50,m=0,N=2*Math.PI/1e3;const h=new THREE.Mesh(new THREE.SphereGeometry(50,50,50),new THREE.ShaderMaterial({vertexShader:S,fragmentShader:V,uniforms:{globeTexture:{value:new THREE.TextureLoader().load("./img/sun.jpg")}}}));h.position.set(0,0,-1e3);t.add(h);const g=new THREE.BufferGeometry,b=new THREE.PointsMaterial({color:16777215}),p=[];for(let l=0;l<1e4;l++){const o=(Math.random()-.5)*2e3,v=(Math.random()-.5)*2e3,i=-Math.random()*2e3,e=Math.random()*2e3;p.push(o,v,i,e)}g.setAttribute("position",new THREE.Float32BufferAttribute(p,3));const z=new THREE.Points(g,b);t.add(z);const s=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3);s.position.set(0,0,100);function w(){requestAnimationFrame(w),n.render(t,s),x.rotation.y+=.002,m-=N,a.position.x=c*Math.cos(m),a.position.z=c*Math.sin(m)}w();window.addEventListener("resize",P,!1);function P(){s.aspect=window.innerWidth/window.innerHeight,s.updateProjectionMatrix(),n.setSize(window.innerWidth,window.innerHeight)}
